name: Build
on: 
  push:
    branches:
    - kraken
    
jobs:
  build-binaries:
    name: Build Binaries
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-18.04,windows-2019]
        arch: [amd64, arm]
        go: [ '1.12' ]
        exclude:
          - os: windows-2019
            arch: arm

    steps:

    - name: Set up Go ${{ matrix.go }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go }}
      id: go

    - name: Pull deps
      uses: actions/checkout@v1
      with:
        repository: pufferpanel/apufferi
        path: apufferi
        ref: master

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
      with:
        path: pufferpanel
        
    - name: Build
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        echo replace github.com/pufferpanel/apufferi/v3 =\> ../apufferi >> go.mod
        go build -o pufferpanel -ldflags "-X github.com/pufferpanel/pufferpanel/version.Hash=${{ github.sha }}" -v github.com/pufferpanel/pufferpanel/v2/cmd
        
    - name: Build
      if: startsWith(matrix.os, 'windows')
      run: |
        echo replace github.com/pufferpanel/apufferi/v3 =^> ../apufferi >> go.mod
        go build -o pufferpanel.exe -ldflags "-X github.com/pufferpanel/pufferpanel/version.Hash=${{ github.sha }}" -v github.com/pufferpanel/pufferpanel/v2/cmd
      
    - name: Publish Binary
      uses: actions/upload-artifact@v1
      if: startsWith(matrix.os, 'windows')
      with:
        name: Windows ${{ matrix.arch }} - Binary
        path: pufferpanel.exe

    - name: Publish Binary
      uses: actions/upload-artifact@v1
      if: startsWith(matrix.os, 'ubuntu')
      with:
        name: Linux ${{ matrix.arch }} - Binary
        path: pufferpanel

  produce-webartifacts:
    name: Generate web artifacts
    runs-on: ubuntu-18.04
    needs: [build-binaries]

    strategy:
      matrix:
        node-version: [ '12.x' ]

    steps:
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: npm install, build
        run: |
          npm install
          npm run build
        env:
          CI: true
        working-directory: client

      - name: Publish Supporting
        uses: actions/upload-artifact@v1
        with:
          name: Web Artifacts
          path: client/dist

  produce-release:
    name: Generate release artifacts
    runs-on: ubuntu-18.04
    needs: [produce-webartifacts]
        
    steps:
      - uses: actions/setup-ruby@v1
        
      - name: Install gems
        run: |
          gem install --no-doc rake
          gem install --no-doc fpm && fpm -v
          gem install --no-doc package_cloud && package_cloud version
          
      - name: Pull deps
        uses: actions/checkout@v1
        with:
          repository: pufferpanel/systemd
          path: systemd
          ref: master
          
      - name: Pull files
        uses: actions/download-artifact@v1
        with:
          name: Linux amd64 - Binary
          path: binaries
        
      - name: Pull files
        uses: actions/download-artifact@v1
        with:
          name: Web Artifacts
          path: client/dist
          
      - name: Build packages
        run: |
          echo { "web": { "files": "/var/www/pufferpanel/" } } > config.json

          fpm -s dir -t deb \
          --name pufferpanel -v ${{ github.sha }} \
          --maintainer dev@pufferpanel.com \
          --deb-user pufferpanel --deb-group pufferpanel \
          --deb-systemd systemd/xenial/servicefiles/systemd/pufferpanel \
          --before-install systemd/xenial/scripts/preinst.sh \
          --after-upgrade systemd/xenial/scripts/postupgrade.sh \
          --before-remove systemd/xenial/scripts/prerm.sh \
          --deb-after-purge systemd/xenial/scripts/purge.sh \
          binaries/pufferpanel=/usr/sbin/pufferpanel \
          client/dist=/var/www/pufferpanel/ \
          config.json=/etc/pufferpanel/config.json
          
          mkdir -p build/xenial
          mv *.dep build/xenial
          
          fpm -s deb -t rpm \
          --name pufferpanel \
          --maintainer dev@pufferpanel.com \
          --rpm-user pufferpanel --rpm-group pufferpanel \
          --before-install systemd/rpm/scripts/preinst.sh \
          --after-upgrade systemd/rpm/scripts/postupgrade.sh \
          --before-remove systemd/rpm/scripts/prerm.sh \
          build/xenial/pufferpanel_*_amd64.deb

          mkdir -p build/rpm
          mv *.rpm build/rpm
          
          fpm -s dir -t deb \
          --name pufferpanel -v ${{ github.sha }} \
          --maintainer dev@pufferpanel.com \
          --deb-user pufferpanel --deb-group pufferpanel \
          --deb-init systemd/trusty/servicefiles/initd/pufferpanel \
          --before-install systemd/trusty/scripts/preinst.sh \
          --before-remove systemd/trusty/scripts/prerm.sh \
          --deb-after-purge systemd/trusty/scripts/purge.sh \
          binaries/pufferpanel=/usr/sbin/pufferpanel \
          client/dist=/var/www/pufferpanel/client/dist/ \
          config.json=/etc/pufferpanel/config.json

          mkdir -p build/trusty
          mv *.deb build/trusty
          
      - name: Publish Packages
        uses: actions/upload-artifact@v1
        with:
          name: Packages
          path: build
