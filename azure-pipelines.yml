trigger:
- kraken

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.11' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/pufferpanel/pufferpanel' # Path to the module's code
  version: 2.0.0

steps:
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
    mkdir $(GOPATH)/build
    go version
  displayName: 'Set up the Go workspace'

- script: |
    curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
    dep version
  workingDirectory: '$(modulePath)'
  displayName: 'Download dep and run `dep ensure`'

- script: |
    export GOOS=linux
    dep ensure -v
    go build -o $(GOPATH)/build/pufferpanel -v github.com/pufferpanel/pufferpanel
  workingDirectory: '$(modulePath)'
  displayName: 'Linux Build'

- script: |
    export GOOS=windows
    dep ensure -v
    go build -o $(GOPATH)/build/pufferpanel -v github.com/pufferpanel/pufferpanel
  workingDirectory: '$(modulePath)'
  displayName: 'Windows Build'

- task: UseRubyVersion@0
  inputs:
    versionSpec: '>= 2.4'
    addToPath: true

- task: Npm@1
  inputs:
    command: 'custom'
    customCommand: 'run build'
    workingDir: '$(modulePath)'

- script: |
    mkdir -p $(GOPATH)\client\dist
    cp -r $(modulePath)\client\dist\* $(GOPATH)\client\dist
  workingDirectory: '$(modulePath)'
  displayName: 'Copy assets'

- task: PublishPipelineArtifact@0
  inputs:
    artifactName: 'pufferpanel'
    targetPath: '$(GOPATH)/build/.'
